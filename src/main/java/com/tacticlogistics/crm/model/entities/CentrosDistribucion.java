package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * CentrosDistribucion generated by hbm2java
 */
@Entity
@Table(name = "Centros_Distribucion", schema = "wms", catalog = "Tactic", uniqueConstraints = @UniqueConstraint(columnNames = "Codigo"))
public class CentrosDistribucion implements java.io.Serializable {

    private Integer id;
    private Direcciones direcciones;
    private OperadoresCentrosDistribucion operadoresCentrosDistribucion;
    private TiposCentroDistribucion tiposCentroDistribucion;
    private String codigo;
    private String nombre;
    private Boolean bodegaRentas;
    private Boolean activo;
    private Date fechaActualizacion;
    private String usuarioActualizacion;
    private Set<Despachos> despachoses = new HashSet<>(0);
    private Set<CentrosDistribucionProductos> centrosDistribucionProductoses = new HashSet<>(
            0);
    private Set<PedidosProductosLotes> pedidosProductosLoteses = new HashSet<>(0);

    public CentrosDistribucion() {
    }

    public CentrosDistribucion(Integer id, OperadoresCentrosDistribucion operadoresCentrosDistribucion,
            TiposCentroDistribucion tiposCentroDistribucion, String codigo, String nombre, Boolean bodegaRentas,
            Boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.operadoresCentrosDistribucion = operadoresCentrosDistribucion;
        this.tiposCentroDistribucion = tiposCentroDistribucion;
        this.codigo = codigo;
        this.nombre = nombre;
        this.bodegaRentas = bodegaRentas;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    public CentrosDistribucion(Integer id, Direcciones direcciones,
            OperadoresCentrosDistribucion operadoresCentrosDistribucion,
            TiposCentroDistribucion tiposCentroDistribucion, String codigo, String nombre, Boolean bodegaRentas,
            Boolean activo, Date fechaActualizacion, String usuarioActualizacion, Set<Despachos> despachoses,
            Set<CentrosDistribucionProductos> centrosDistribucionProductoses,
            Set<PedidosProductosLotes> pedidosProductosLoteses) {
        this.id = id;
        this.direcciones = direcciones;
        this.operadoresCentrosDistribucion = operadoresCentrosDistribucion;
        this.tiposCentroDistribucion = tiposCentroDistribucion;
        this.codigo = codigo;
        this.nombre = nombre;
        this.bodegaRentas = bodegaRentas;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
        this.despachoses = despachoses;
        this.centrosDistribucionProductoses = centrosDistribucionProductoses;
        this.pedidosProductosLoteses = pedidosProductosLoteses;
    }

    @Id

    @Column(name = "Id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Direccion")
    public Direcciones getDirecciones() {
        return this.direcciones;
    }

    public void setDirecciones(Direcciones direcciones) {
        this.direcciones = direcciones;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Operador_Centro_Distribucion", nullable = false)
    public OperadoresCentrosDistribucion getOperadoresCentrosDistribucion() {
        return this.operadoresCentrosDistribucion;
    }

    public void setOperadoresCentrosDistribucion(OperadoresCentrosDistribucion operadoresCentrosDistribucion) {
        this.operadoresCentrosDistribucion = operadoresCentrosDistribucion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Tipo_Centro_Distribucion", nullable = false)
    public TiposCentroDistribucion getTiposCentroDistribucion() {
        return this.tiposCentroDistribucion;
    }

    public void setTiposCentroDistribucion(TiposCentroDistribucion tiposCentroDistribucion) {
        this.tiposCentroDistribucion = tiposCentroDistribucion;
    }

    @Column(name = "Codigo", unique = true, nullable = false, length = 20)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    @Column(name = "Nombre", nullable = false, length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "Bodega_Rentas", nullable = false)
    public Boolean getBodegaRentas() {
        return this.bodegaRentas;
    }

    public void setBodegaRentas(Boolean bodegaRentas) {
        this.bodegaRentas = bodegaRentas;
    }

    @Column(name = "Activo", nullable = false)
    public Boolean getActivo() {
        return this.activo;
    }

    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "centrosDistribucion")
    public Set<Despachos> getDespachoses() {
        return this.despachoses;
    }

    public void setDespachoses(Set<Despachos> despachoses) {
        this.despachoses = despachoses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "centrosDistribucion")
    public Set<CentrosDistribucionProductos> getCentrosDistribucionProductoses() {
        return this.centrosDistribucionProductoses;
    }

    public void setCentrosDistribucionProductoses(Set<CentrosDistribucionProductos> centrosDistribucionProductoses) {
        this.centrosDistribucionProductoses = centrosDistribucionProductoses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "centrosDistribucion")
    public Set<PedidosProductosLotes> getPedidosProductosLoteses() {
        return this.pedidosProductosLoteses;
    }

    public void setPedidosProductosLoteses(Set<PedidosProductosLotes> pedidosProductosLoteses) {
        this.pedidosProductosLoteses = pedidosProductosLoteses;
    }

}
