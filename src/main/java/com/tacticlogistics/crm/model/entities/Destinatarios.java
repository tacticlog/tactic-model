package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * Destinatarios generated by hbm2java
 */
@Entity
@Table(name = "Destinatarios", schema = "crm", catalog = "Tactic", uniqueConstraints = @UniqueConstraint(columnNames = {
    "Id_Cliente", "Codigo"}))
public class Destinatarios implements java.io.Serializable, EntityId {

    private Integer id;
    private Canales canales;
    private Clientes clientes;
    private Terceros terceros;
    private String codigo;
    private String nombreContacto;
    private String telefonosContacto;
    private String emailsContacto;
    private Boolean activo;
    private Date fechaActualizacion;
    private String usuarioActualizacion;
    private Set<PuntosEntrega> puntosEntregas = new HashSet<>(0);
    private Set<Pedidos> pedidoses = new HashSet<>(0);
    private Set<Despachos> despachoses = new HashSet<>(0);
    private Set<DestinatariosFinales> destinatariosFinaleses = new HashSet<>(0);
    private Set<DestinatariosSucursales> destinatariosSucursaleses = new HashSet<>(0);

    public Destinatarios() {
    }

    public Destinatarios(Clientes clientes, Terceros terceros, String codigo, String nombreContacto, String telefonosContacto, String emailsContacto, Boolean activo, Date fechaActualizacion,
            String usuarioActualizacion) {
        this.clientes = clientes;
        this.terceros = terceros;
        this.codigo = codigo;
        this.nombreContacto = nombreContacto;
        this.telefonosContacto = telefonosContacto;
        this.emailsContacto = emailsContacto;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    public Destinatarios(Canales canales, Clientes clientes, Terceros terceros, String codigo, String nombreContacto, String telefonosContacto, String emailsContacto, Boolean activo,
            Date fechaActualizacion, String usuarioActualizacion, Set<PuntosEntrega> puntosEntregas,
            Set<Pedidos> pedidoses, Set<Despachos> despachoses, Set<DestinatariosFinales> destinatariosFinaleses,
            Set<DestinatariosSucursales> destinatariosSucursaleses) {
        this.canales = canales;
        this.clientes = clientes;
        this.terceros = terceros;
        this.codigo = codigo;
        this.nombreContacto = nombreContacto;
        this.telefonosContacto = telefonosContacto;
        this.emailsContacto = emailsContacto;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
        this.puntosEntregas = puntosEntregas;
        this.pedidoses = pedidoses;
        this.despachoses = despachoses;
        this.destinatariosFinaleses = destinatariosFinaleses;
        this.destinatariosSucursaleses = destinatariosSucursaleses;
    }

    @GenericGenerator(name = "generator", strategy = "foreign", parameters = @Parameter(name = "property", value = "terceros"))
    @Id
    @GeneratedValue(generator = "generator")
    @Column(name = "Id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Canal")
    public Canales getCanales() {
        return this.canales;
    }

    public void setCanales(Canales canales) {
        this.canales = canales;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Cliente", nullable = false)
    public Clientes getClientes() {
        return this.clientes;
    }

    public void setClientes(Clientes clientes) {
        this.clientes = clientes;
    }

    @OneToOne(fetch = FetchType.EAGER)
    @PrimaryKeyJoinColumn
    public Terceros getTerceros() {
        return this.terceros;
    }

    public void setTerceros(Terceros terceros) {
        this.terceros = terceros;
    }

    @Column(name = "Codigo", nullable = false, length = 20)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    @Column(name = "Nombre_Contacto", nullable = false, length = 100)
    public String getNombreContacto() {
        return nombreContacto;
    }

    public void setNombreContacto(String nombreContacto) {
        this.nombreContacto = nombreContacto;
    }

    @Column(name = "Telefonos_Contacto", nullable = false, length = 50)
    public String getTelefonosContacto() {
        return telefonosContacto;
    }

    public void setTelefonosContacto(String telefonosContacto) {
        this.telefonosContacto = telefonosContacto;
    }

    @Column(name = "Emails_Cotacto", nullable = false, length = 50)
    public String getEmailsContacto() {
        return emailsContacto;
    }

    public void setEmailsContacto(String emailsContacto) {
        this.emailsContacto = emailsContacto;
    }

    @Column(name = "Activo", nullable = false)
    public Boolean getActivo() {
        return this.activo;
    }

    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "destinatarios")
    public Set<PuntosEntrega> getPuntosEntregas() {
        return this.puntosEntregas;
    }

    public void setPuntosEntregas(Set<PuntosEntrega> puntosEntregas) {
        this.puntosEntregas = puntosEntregas;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "destinatarios")
    public Set<Pedidos> getPedidoses() {
        return this.pedidoses;
    }

    public void setPedidoses(Set<Pedidos> pedidoses) {
        this.pedidoses = pedidoses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "destinatarios")
    public Set<Despachos> getDespachoses() {
        return this.despachoses;
    }

    public void setDespachoses(Set<Despachos> despachoses) {
        this.despachoses = despachoses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "destinatarios")
    public Set<DestinatariosFinales> getDestinatariosFinaleses() {
        return this.destinatariosFinaleses;
    }

    public void setDestinatariosFinaleses(Set<DestinatariosFinales> destinatariosFinaleses) {
        this.destinatariosFinaleses = destinatariosFinaleses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "destinatarios")
    public Set<DestinatariosSucursales> getDestinatariosSucursaleses() {
        return this.destinatariosSucursaleses;
    }

    public void setDestinatariosSucursaleses(Set<DestinatariosSucursales> destinatariosSucursaleses) {
        this.destinatariosSucursaleses = destinatariosSucursaleses;
    }

}
