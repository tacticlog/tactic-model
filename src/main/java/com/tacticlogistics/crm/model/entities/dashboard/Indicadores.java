package com.tacticlogistics.crm.model.entities.dashboard;
// Generated 29-oct-2015 10:32:55 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Indicadores generated by hbm2java
 */
@Entity
@Table(name = "Indicadores", catalog = "dashboard")
public class Indicadores implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Integer id;
	private GruposIndicador gruposIndicador;
	private UoMDB uoM;
	private UoT uoT;
	private String codigo;
	private String nombre;
	private String descripcion;
	private Short ordinal;
	private Boolean activo;
	private Date fechaActualizacion;
	private String usuarioActualizacion;
	private Set<Metas> metases = new HashSet<Metas>(0);
	private Set<Mediciones> medicioneses = new HashSet<Mediciones>(0);

	public Indicadores() {
	}

	public Indicadores(Integer id, GruposIndicador gruposIndicador, UoMDB uoM, UoT uoT, String codigo, String nombre,
			String descripcion, Short ordinal, Boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
		this.id = id;
		this.gruposIndicador = gruposIndicador;
		this.uoM = uoM;
		this.uoT = uoT;
		this.codigo = codigo;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.ordinal = ordinal;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public Indicadores(Integer id, GruposIndicador gruposIndicador, UoMDB uoM, UoT uoT, String codigo, String nombre,
			String descripcion, Short ordinal, Boolean activo, Date fechaActualizacion, String usuarioActualizacion,
			Set<Metas> metases, Set<Mediciones> medicioneses) {
		this.id = id;
		this.gruposIndicador = gruposIndicador;
		this.uoM = uoM;
		this.uoT = uoT;
		this.codigo = codigo;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.ordinal = ordinal;
		this.activo = activo;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
		this.metases = metases;
		this.medicioneses = medicioneses;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Id_Grupo_Indicador", nullable = false)
	public GruposIndicador getGruposIndicador() {
		return this.gruposIndicador;
	}

	public void setGruposIndicador(GruposIndicador gruposIndicador) {
		this.gruposIndicador = gruposIndicador;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Id_UoM", nullable = false)
	public UoMDB getUoM() {
		return this.uoM;
	}

	public void setUoM(UoMDB uoM) {
		this.uoM = uoM;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Id_UoT", nullable = false)
	public UoT getUoT() {
		return this.uoT;
	}

	public void setUoT(UoT uoT) {
		this.uoT = uoT;
	}

	@Column(name = "Codigo", nullable = false, length = 5)
	public String getCodigo() {
		return this.codigo;
	}

	public void setCodigo(String codigo) {
		this.codigo = codigo;
	}

	@Column(name = "Nombre", nullable = false, length = 50)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "Descripcion", nullable = false, length = 200)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Column(name = "Ordinal", nullable = false)
	public Short getOrdinal() {
		return this.ordinal;
	}

	public void setOrdinal(Short ordinal) {
		this.ordinal = ordinal;
	}

	@Column(name = "Activo", nullable = false)
	public Boolean getActivo() {
		return this.activo;
	}

	public void setActivo(Boolean activo) {
		this.activo = activo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "indicadores")
	public Set<Metas> getMetases() {
		return this.metases;
	}

	public void setMetases(Set<Metas> metases) {
		this.metases = metases;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "indicadores")
	public Set<Mediciones> getMedicioneses() {
		return this.medicioneses;
	}

	public void setMedicioneses(Set<Mediciones> medicioneses) {
		this.medicioneses = medicioneses;
	}

}
