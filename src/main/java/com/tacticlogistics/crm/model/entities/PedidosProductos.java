package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PedidosProductos generated by hbm2java
 */
@Entity
@Table(name = "Pedidos_Productos", schema = "crm", catalog = "Tactic")
public class PedidosProductos implements java.io.Serializable, EntityId {

    private Integer id;
    private PedidosDestinos pedidosDestinos;
    private Productos productos;
    private UoM uoM;
    private Short numeroLinea;
    private Integer cantidadSolicitada;
    private Integer cantidadDespachada;
    private BigDecimal valorDeclaradoPorUoMDespachada;
    private String CodigoCentroDistribucionSugerido;
    private String NumeroLoteSugerido;
    private String Observaciones;
    private Date fechaActualizacion;
    private String usuarioActualizacion;
    private Set<PedidosProductosLotes> pedidosProductosLoteses = new HashSet<>(0);

    public PedidosProductos() {
    }

    public PedidosProductos(Integer id, PedidosDestinos pedidosDestinos, Productos productos, UoM uoM, Short numeroLinea, Integer cantidadSolicitada, Integer cantidadDespachada, BigDecimal valorDeclaradoPorUoMDespachada, String CodigoCentroDistribucionSugerido, String NumeroLoteSugerido, String Observaciones, Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.pedidosDestinos = pedidosDestinos;
        this.productos = productos;
        this.uoM = uoM;
        this.numeroLinea = numeroLinea;
        this.cantidadSolicitada = cantidadSolicitada;
        this.cantidadDespachada = cantidadDespachada;
        this.valorDeclaradoPorUoMDespachada = valorDeclaradoPorUoMDespachada;
        this.CodigoCentroDistribucionSugerido = CodigoCentroDistribucionSugerido;
        this.NumeroLoteSugerido = NumeroLoteSugerido;
        this.Observaciones = Observaciones;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    public PedidosProductos(Integer id, PedidosDestinos pedidosDestinos, Productos productos, UoM uoM, Short numeroLinea, Integer cantidadSolicitada, Integer cantidadDespachada, BigDecimal valorDeclaradoPorUoMDespachada, String CodigoCentroDistribucionSugerido, String NumeroLoteSugerido, String Observaciones, Date fechaActualizacion, String usuarioActualizacion, Set<PedidosProductosLotes> pedidosProductosLoteses) {
        this.id = id;
        this.pedidosDestinos = pedidosDestinos;
        this.productos = productos;
        this.uoM = uoM;
        this.numeroLinea = numeroLinea;
        this.cantidadSolicitada = cantidadSolicitada;
        this.cantidadDespachada = cantidadDespachada;
        this.valorDeclaradoPorUoMDespachada = valorDeclaradoPorUoMDespachada;
        this.CodigoCentroDistribucionSugerido = CodigoCentroDistribucionSugerido;
        this.NumeroLoteSugerido = NumeroLoteSugerido;
        this.Observaciones = Observaciones;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
        this.pedidosProductosLoteses = pedidosProductosLoteses;
    }

    @Id
    @GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)
    @Column(name = "Id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_Pedido_Destino", nullable = false)
    public PedidosDestinos getPedidosDestinos() {
        return this.pedidosDestinos;
    }

    public void setPedidosDestinos(PedidosDestinos pedidosDestinos) {
        this.pedidosDestinos = pedidosDestinos;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_Producto", nullable = false)
    public Productos getProductos() {
        return this.productos;
    }

    public void setProductos(Productos productos) {
        this.productos = productos;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_UoM", nullable = false)
    public UoM getUoM() {
        return this.uoM;
    }

    public void setUoM(UoM uoM) {
        this.uoM = uoM;
    }

    @Column(name = "Numero_Linea", nullable = false)
    public Short getNumeroLinea() {
        return this.numeroLinea;
    }

    public void setNumeroLinea(Short numeroLinea) {
        this.numeroLinea = numeroLinea;
    }

    @Column(name = "Cantidad_Solicitada", nullable = false)
    public Integer getCantidadSolicitada() {
        return this.cantidadSolicitada;
    }

    public void setCantidadSolicitada(Integer cantidadSolicitada) {
        this.cantidadSolicitada = cantidadSolicitada;
    }

    @Column(name = "Cantidad_Despachada", nullable = false)
    public Integer getCantidadDespachada() {
        return this.cantidadDespachada;
    }

    public void setCantidadDespachada(Integer cantidadDespachada) {
        this.cantidadDespachada = cantidadDespachada;
    }

    @Column(name = "Valor_Declarado_Por_UoM_Despachada", nullable = false, scale = 4)
    public BigDecimal getValorDeclaradoPorUoMDespachada() {
        return this.valorDeclaradoPorUoMDespachada;
    }

    public void setValorDeclaradoPorUoMDespachada(BigDecimal valorDeclaradoPorUoMDespachada) {
        this.valorDeclaradoPorUoMDespachada = valorDeclaradoPorUoMDespachada;
    }

    @Column(name = "Codigo_Centro_Distribucion_Sugerido", nullable = false, length = 20)
    public String getCodigoCentroDistribucionSugerido() {
        return CodigoCentroDistribucionSugerido;
    }

    public void setCodigoCentroDistribucionSugerido(String CodigoCentroDistribucionSugerido) {
        this.CodigoCentroDistribucionSugerido = CodigoCentroDistribucionSugerido;
    }

    @Column(name = "Numero_Lote_Sugerido", nullable = false, length = 25)
    public String getNumeroLoteSugerido() {
        return NumeroLoteSugerido;
    }

    public void setNumeroLoteSugerido(String NumeroLoteSugerido) {
        this.NumeroLoteSugerido = NumeroLoteSugerido;
    }

    @Column(name = "Observaciones", nullable = false, length = 200)
    public String getObservaciones() {
        return Observaciones;
    }

    public void setObservaciones(String Observaciones) {
        this.Observaciones = Observaciones;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "pedidosProductos")
    public Set<PedidosProductosLotes> getPedidosProductosLoteses() {
        return this.pedidosProductosLoteses;
    }

    public void setPedidosProductosLoteses(Set<PedidosProductosLotes> pedidosProductosLoteses) {
        this.pedidosProductosLoteses = pedidosProductosLoteses;
    }

}
