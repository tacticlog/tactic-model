package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PuntosEntrega generated by hbm2java
 */
@Entity
@Table(name = "Puntos_Entrega", schema = "tms", catalog = "Tactic")
public class PuntosEntrega implements java.io.Serializable, EntityId {

    private Integer id;
    private Destinatarios destinatarios;
    private DestinatariosFinales destinatariosFinales;
    private DestinatariosSucursales destinatariosSucursales;
    private Direcciones direcciones;
    private String codigo;
    private String nombre;
    private Boolean bodegaRentas;
    private String nombreContacto;
    private String telefonosContacto;
    private String emailsContacto;
    private Boolean activo;
    private Date fechaActualizacion;
    private String usuarioActualizacion;
    private Set<PedidosDestinos> pedidosDestinoses = new HashSet<>(0);
    private Set<PuntosEntregaHorarios> puntosEntregaHorarioses = new HashSet<>(0);
    private Set<Despachos> despachoses = new HashSet<>(0);
    private Set<PuntosEntregaProductos> puntosEntregaProductoses = new HashSet<>(0);

    public PuntosEntrega() {
    }

    public PuntosEntrega(Integer id, Destinatarios destinatarios, Direcciones direcciones, String codigo, String nombre, String nombreContacto, String telefonosContacto, String emailsContacto,
            Boolean bodegaRentas, Boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.destinatarios = destinatarios;
        this.direcciones = direcciones;
        this.codigo = codigo;
        this.nombre = nombre;
        this.bodegaRentas = bodegaRentas;
        this.nombreContacto = nombreContacto;
        this.telefonosContacto = telefonosContacto;
        this.emailsContacto = emailsContacto;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    public PuntosEntrega(Integer id, Destinatarios destinatarios, DestinatariosFinales destinatariosFinales,
            DestinatariosSucursales destinatariosSucursales, Direcciones direcciones, String codigo, String nombre,
            Boolean bodegaRentas, String nombreContacto, String telefonosContacto, String emailsContacto, Boolean activo, Date fechaActualizacion, String usuarioActualizacion,
            Set<PedidosDestinos> pedidosDestinoses, Set<PuntosEntregaHorarios> puntosEntregaHorarioses,
            Set<Despachos> despachoses, Set<PuntosEntregaProductos> puntosEntregaProductoses) {
        this.id = id;
        this.destinatarios = destinatarios;
        this.destinatariosFinales = destinatariosFinales;
        this.destinatariosSucursales = destinatariosSucursales;
        this.direcciones = direcciones;
        this.codigo = codigo;
        this.nombre = nombre;
        this.bodegaRentas = bodegaRentas;
        this.nombreContacto = nombreContacto;
        this.telefonosContacto = telefonosContacto;
        this.emailsContacto = emailsContacto;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
        this.pedidosDestinoses = pedidosDestinoses;
        this.puntosEntregaHorarioses = puntosEntregaHorarioses;
        this.despachoses = despachoses;
        this.puntosEntregaProductoses = puntosEntregaProductoses;
    }

    @Id
    @Column(name = "Id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Destinatario", nullable = false)
    public Destinatarios getDestinatarios() {
        return this.destinatarios;
    }

    public void setDestinatarios(Destinatarios destinatarios) {
        this.destinatarios = destinatarios;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Destinatario_Final")
    public DestinatariosFinales getDestinatariosFinales() {
        return this.destinatariosFinales;
    }

    public void setDestinatariosFinales(DestinatariosFinales destinatariosFinales) {
        this.destinatariosFinales = destinatariosFinales;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Destinatario_Sucursal")
    public DestinatariosSucursales getDestinatariosSucursales() {
        return this.destinatariosSucursales;
    }

    public void setDestinatariosSucursales(DestinatariosSucursales destinatariosSucursales) {
        this.destinatariosSucursales = destinatariosSucursales;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_Direccion", nullable = false)
    public Direcciones getDirecciones() {
        return this.direcciones;
    }

    public void setDirecciones(Direcciones direcciones) {
        this.direcciones = direcciones;
    }

    @Column(name = "Codigo", nullable = false, length = 20)
    public String getCodigo() {
        return this.codigo;
    }

    public void setCodigo(String codigo) {
        this.codigo = codigo;
    }

    @Column(name = "Nombre", nullable = false, length = 50)
    public String getNombre() {
        return this.nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    @Column(name = "Bodega_Rentas", nullable = false)
    public Boolean getBodegaRentas() {
        return this.bodegaRentas;
    }

    public void setBodegaRentas(Boolean bodegaRentas) {
        this.bodegaRentas = bodegaRentas;
    }

    @Column(name = "Nombre_Contacto", nullable = false, length = 100)
    public String getNombreContacto() {
        return nombreContacto;
    }

    public void setNombreContacto(String nombreContacto) {
        this.nombreContacto = nombreContacto;
    }

    @Column(name = "Telefonos_Contacto", nullable = false, length = 50)
    public String getTelefonosContacto() {
        return telefonosContacto;
    }

    public void setTelefonosContacto(String telefonosContacto) {
        this.telefonosContacto = telefonosContacto;
    }

    @Column(name = "Emails_Cotacto", nullable = false, length = 50)
    public String getEmailsContacto() {
        return emailsContacto;
    }

    public void setEmailsContacto(String emailsContacto) {
        this.emailsContacto = emailsContacto;
    }

    @Column(name = "Activo", nullable = false)
    public Boolean getActivo() {
        return this.activo;
    }

    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntosEntrega")
    public Set<PedidosDestinos> getPedidosDestinoses() {
        return this.pedidosDestinoses;
    }

    public void setPedidosDestinoses(Set<PedidosDestinos> pedidosDestinoses) {
        this.pedidosDestinoses = pedidosDestinoses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntosEntrega")
    public Set<PuntosEntregaHorarios> getPuntosEntregaHorarioses() {
        return this.puntosEntregaHorarioses;
    }

    public void setPuntosEntregaHorarioses(Set<PuntosEntregaHorarios> puntosEntregaHorarioses) {
        this.puntosEntregaHorarioses = puntosEntregaHorarioses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntosEntrega")
    public Set<Despachos> getDespachoses() {
        return this.despachoses;
    }

    public void setDespachoses(Set<Despachos> despachoses) {
        this.despachoses = despachoses;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "puntosEntrega")
    public Set<PuntosEntregaProductos> getPuntosEntregaProductoses() {
        return this.puntosEntregaProductoses;
    }

    public void setPuntosEntregaProductoses(Set<PuntosEntregaProductos> puntosEntregaProductoses) {
        this.puntosEntregaProductoses = puntosEntregaProductoses;
    }

}
