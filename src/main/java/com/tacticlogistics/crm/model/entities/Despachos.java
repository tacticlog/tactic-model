package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Despachos generated by hbm2java
 */
@Entity
@Table(name = "Despachos", schema = "tms", catalog = "Tactic")
public class Despachos implements java.io.Serializable {

    private Integer id;
    private Clientes clientes;
    private Destinatarios destinatarios;
    private DestinatariosFinales destinatariosFinales;
    private PedidosDestinos pedidosDestinos;
    private PrioridadesPedidos prioridadesPedidos;
    private TiposFormaPago tiposFormaPago;
    private Direcciones direccionesByIdDireccionDestino;
    private Direcciones direccionesByIdDireccionOrigen;
    private CausalesAnulacionDespachos causalesAnulacionDespachos;
    private EstadosDespachos estadosDespachos;
    private PuntosEntrega puntosEntrega;
    private TiposDistribucion tiposDistribucion;
    private TiposEntrega tiposEntrega;
    private CentrosDistribucion centrosDistribucion;
    private TiposPedido tiposPedido;
    private String numeroDocumentoEntrega;
    private BigDecimal valorDeclarado;
    private Boolean paqueteo;
    private Date fechaEntrega;
    private Date horaInicio;
    private Date horaFin;
    private Integer idRuta;
    private Integer consecutivoRuta;
    private String observacion;
    private Boolean activo;
    private Date fechaActualizacion;
    private String usuarioActualizacion;

    public Despachos() {
    }

    public Despachos(Integer id, Clientes clientes, Destinatarios destinatarios, PedidosDestinos pedidosDestinos,
            PrioridadesPedidos prioridadesPedidos, TiposFormaPago tiposFormaPago,
            Direcciones direccionesByIdDireccionDestino, Direcciones direccionesByIdDireccionOrigen,
            EstadosDespachos estadosDespachos, PuntosEntrega puntosEntrega, TiposDistribucion tiposDistribucion,
            TiposEntrega tiposEntrega, CentrosDistribucion centrosDistribucion, String numeroDocumentoEntrega,
            BigDecimal valorDeclarado, Boolean paqueteo, Date fechaEntrega, Date horaInicio, Date horaFin,
            String observacion, Boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.clientes = clientes;
        this.destinatarios = destinatarios;
        this.pedidosDestinos = pedidosDestinos;
        this.prioridadesPedidos = prioridadesPedidos;
        this.tiposFormaPago = tiposFormaPago;
        this.direccionesByIdDireccionDestino = direccionesByIdDireccionDestino;
        this.direccionesByIdDireccionOrigen = direccionesByIdDireccionOrigen;
        this.estadosDespachos = estadosDespachos;
        this.puntosEntrega = puntosEntrega;
        this.tiposDistribucion = tiposDistribucion;
        this.tiposEntrega = tiposEntrega;
        this.centrosDistribucion = centrosDistribucion;
        this.numeroDocumentoEntrega = numeroDocumentoEntrega;
        this.valorDeclarado = valorDeclarado;
        this.paqueteo = paqueteo;
        this.fechaEntrega = fechaEntrega;
        this.horaInicio = horaInicio;
        this.horaFin = horaFin;
        this.observacion = observacion;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    public Despachos(Integer id, Clientes clientes, Destinatarios destinatarios,
            DestinatariosFinales destinatariosFinales, PedidosDestinos pedidosDestinos,
            PrioridadesPedidos prioridadesPedidos, TiposFormaPago tiposFormaPago,
            Direcciones direccionesByIdDireccionDestino, Direcciones direccionesByIdDireccionOrigen,
            CausalesAnulacionDespachos causalesAnulacionDespachos, EstadosDespachos estadosDespachos,
            PuntosEntrega puntosEntrega, TiposDistribucion tiposDistribucion, TiposEntrega tiposEntrega,
            CentrosDistribucion centrosDistribucion, String numeroDocumentoEntrega, BigDecimal valorDeclarado,
            Boolean paqueteo, Date fechaEntrega, Date horaInicio, Date horaFin, Integer idRuta, Integer consecutivoRuta,
            String observacion, Boolean activo, Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.clientes = clientes;
        this.destinatarios = destinatarios;
        this.destinatariosFinales = destinatariosFinales;
        this.pedidosDestinos = pedidosDestinos;
        this.prioridadesPedidos = prioridadesPedidos;
        this.tiposFormaPago = tiposFormaPago;
        this.direccionesByIdDireccionDestino = direccionesByIdDireccionDestino;
        this.direccionesByIdDireccionOrigen = direccionesByIdDireccionOrigen;
        this.causalesAnulacionDespachos = causalesAnulacionDespachos;
        this.estadosDespachos = estadosDespachos;
        this.puntosEntrega = puntosEntrega;
        this.tiposDistribucion = tiposDistribucion;
        this.tiposEntrega = tiposEntrega;
        this.centrosDistribucion = centrosDistribucion;
        this.numeroDocumentoEntrega = numeroDocumentoEntrega;
        this.valorDeclarado = valorDeclarado;
        this.paqueteo = paqueteo;
        this.fechaEntrega = fechaEntrega;
        this.horaInicio = horaInicio;
        this.horaFin = horaFin;
        this.idRuta = idRuta;
        this.consecutivoRuta = consecutivoRuta;
        this.observacion = observacion;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @Id

    @Column(name = "Id", unique = true, nullable = false)
    public Integer getId() {
        return this.id;
    }

    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Cliente", nullable = false)
    public Clientes getClientes() {
        return this.clientes;
    }

    public void setClientes(Clientes clientes) {
        this.clientes = clientes;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Destinatario", nullable = false)
    public Destinatarios getDestinatarios() {
        return this.destinatarios;
    }

    public void setDestinatarios(Destinatarios destinatarios) {
        this.destinatarios = destinatarios;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Destinatario_Final")
    public DestinatariosFinales getDestinatariosFinales() {
        return this.destinatariosFinales;
    }

    public void setDestinatariosFinales(DestinatariosFinales destinatariosFinales) {
        this.destinatariosFinales = destinatariosFinales;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Pedido_Destino", nullable = false)
    public PedidosDestinos getPedidosDestinos() {
        return this.pedidosDestinos;
    }

    public void setPedidosDestinos(PedidosDestinos pedidosDestinos) {
        this.pedidosDestinos = pedidosDestinos;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Prioridad_Pedido", nullable = false)
    public PrioridadesPedidos getPrioridadesPedidos() {
        return this.prioridadesPedidos;
    }

    public void setPrioridadesPedidos(PrioridadesPedidos prioridadesPedidos) {
        this.prioridadesPedidos = prioridadesPedidos;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Tipo_Forma_Pago", nullable = false)
    public TiposFormaPago getTiposFormaPago() {
        return this.tiposFormaPago;
    }

    public void setTiposFormaPago(TiposFormaPago tiposFormaPago) {
        this.tiposFormaPago = tiposFormaPago;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Direccion_Destino", nullable = false)
    public Direcciones getDireccionesByIdDireccionDestino() {
        return this.direccionesByIdDireccionDestino;
    }

    public void setDireccionesByIdDireccionDestino(Direcciones direccionesByIdDireccionDestino) {
        this.direccionesByIdDireccionDestino = direccionesByIdDireccionDestino;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Direccion_Origen", nullable = false)
    public Direcciones getDireccionesByIdDireccionOrigen() {
        return this.direccionesByIdDireccionOrigen;
    }

    public void setDireccionesByIdDireccionOrigen(Direcciones direccionesByIdDireccionOrigen) {
        this.direccionesByIdDireccionOrigen = direccionesByIdDireccionOrigen;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Causal_Anulacion_Despacho")
    public CausalesAnulacionDespachos getCausalesAnulacionDespachos() {
        return this.causalesAnulacionDespachos;
    }

    public void setCausalesAnulacionDespachos(CausalesAnulacionDespachos causalesAnulacionDespachos) {
        this.causalesAnulacionDespachos = causalesAnulacionDespachos;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Estado_Despacho", nullable = false)
    public EstadosDespachos getEstadosDespachos() {
        return this.estadosDespachos;
    }

    public void setEstadosDespachos(EstadosDespachos estadosDespachos) {
        this.estadosDespachos = estadosDespachos;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Punto_Entrega", nullable = false)
    public PuntosEntrega getPuntosEntrega() {
        return this.puntosEntrega;
    }

    public void setPuntosEntrega(PuntosEntrega puntosEntrega) {
        this.puntosEntrega = puntosEntrega;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Tipo_Distribucion", nullable = false)
    public TiposDistribucion getTiposDistribucion() {
        return this.tiposDistribucion;
    }

    public void setTiposDistribucion(TiposDistribucion tiposDistribucion) {
        this.tiposDistribucion = tiposDistribucion;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Tipo_Entrega", nullable = false)
    public TiposEntrega getTiposEntrega() {
        return this.tiposEntrega;
    }

    public void setTiposEntrega(TiposEntrega tiposEntrega) {
        this.tiposEntrega = tiposEntrega;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Centro_Distribucion", nullable = false)
    public CentrosDistribucion getCentrosDistribucion() {
        return this.centrosDistribucion;
    }

    public void setCentrosDistribucion(CentrosDistribucion centrosDistribucion) {
        this.centrosDistribucion = centrosDistribucion;
    }

    @Column(name = "Numero_Documento_Entrega", nullable = false, length = 30)
    public String getNumeroDocumentoEntrega() {
        return this.numeroDocumentoEntrega;
    }

    public void setNumeroDocumentoEntrega(String numeroDocumentoEntrega) {
        this.numeroDocumentoEntrega = numeroDocumentoEntrega;
    }

    @Column(name = "Valor_Declarado", nullable = false, scale = 4)
    public BigDecimal getValorDeclarado() {
        return this.valorDeclarado;
    }

    public void setValorDeclarado(BigDecimal valorDeclarado) {
        this.valorDeclarado = valorDeclarado;
    }

    @Column(name = "Paqueteo", nullable = false)
    public Boolean getPaqueteo() {
        return this.paqueteo;
    }

    public void setPaqueteo(Boolean paqueteo) {
        this.paqueteo = paqueteo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Entrega", nullable = false, length = 19)
    public Date getFechaEntrega() {
        return this.fechaEntrega;
    }

    public void setFechaEntrega(Date fechaEntrega) {
        this.fechaEntrega = fechaEntrega;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "Hora_Inicio", nullable = false, length = 8)
    public Date getHoraInicio() {
        return this.horaInicio;
    }

    public void setHoraInicio(Date horaInicio) {
        this.horaInicio = horaInicio;
    }

    @Temporal(TemporalType.TIME)
    @Column(name = "Hora_Fin", nullable = false, length = 8)
    public Date getHoraFin() {
        return this.horaFin;
    }

    public void setHoraFin(Date horaFin) {
        this.horaFin = horaFin;
    }

    @Column(name = "Id_Ruta")
    public Integer getIdRuta() {
        return this.idRuta;
    }

    public void setIdRuta(Integer idRuta) {
        this.idRuta = idRuta;
    }

    @Column(name = "Consecutivo_Ruta")
    public Integer getConsecutivoRuta() {
        return this.consecutivoRuta;
    }

    public void setConsecutivoRuta(Integer consecutivoRuta) {
        this.consecutivoRuta = consecutivoRuta;
    }

    @Column(name = "Observacion", nullable = false, length = 200)
    public String getObservacion() {
        return this.observacion;
    }

    public void setObservacion(String observacion) {
        this.observacion = observacion;
    }

    @Column(name = "Activo", nullable = false)
    public Boolean getActivo() {
        return this.activo;
    }

    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

}
