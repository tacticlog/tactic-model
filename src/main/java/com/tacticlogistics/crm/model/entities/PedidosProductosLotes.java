package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PedidosProductosLotes generated by hbm2java
 */
@Entity
@Table(name = "Pedidos_Productos_Lotes", schema = "wms", catalog = "Tactic")
public class PedidosProductosLotes implements java.io.Serializable {

	private Integer id;
	private PedidosProductos pedidosProductos;
	private CentrosDistribucion centrosDistribucion;
	private UoM uoM;
	private String numeroLote;
	private String numeroBl;
	private String numeroFondoCuenta;
	private Integer cantidad;
	private Boolean sugerido;
	private Boolean confirmado;
	private Date fechaConfirmacion;
	private String usuarioConfirmacion;
	private Date fechaActualizacion;
	private String usuarioActualizacion;

	public PedidosProductosLotes() {
	}

	public PedidosProductosLotes(Integer id, PedidosProductos pedidosProductos, CentrosDistribucion centrosDistribucion,
			UoM uoM, String numeroLote, String numeroBl, String numeroFondoCuenta, Integer cantidad, Boolean sugerido,
			Boolean confirmado, Date fechaActualizacion, String usuarioActualizacion) {
		this.id = id;
		this.pedidosProductos = pedidosProductos;
		this.centrosDistribucion = centrosDistribucion;
		this.uoM = uoM;
		this.numeroLote = numeroLote;
		this.numeroBl = numeroBl;
		this.numeroFondoCuenta = numeroFondoCuenta;
		this.cantidad = cantidad;
		this.sugerido = sugerido;
		this.confirmado = confirmado;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	public PedidosProductosLotes(Integer id, PedidosProductos pedidosProductos, CentrosDistribucion centrosDistribucion,
			UoM uoM, String numeroLote, String numeroBl, String numeroFondoCuenta, Integer cantidad, Boolean sugerido,
			Boolean confirmado, Date fechaConfirmacion, String usuarioConfirmacion, Date fechaActualizacion,
			String usuarioActualizacion) {
		this.id = id;
		this.pedidosProductos = pedidosProductos;
		this.centrosDistribucion = centrosDistribucion;
		this.uoM = uoM;
		this.numeroLote = numeroLote;
		this.numeroBl = numeroBl;
		this.numeroFondoCuenta = numeroFondoCuenta;
		this.cantidad = cantidad;
		this.sugerido = sugerido;
		this.confirmado = confirmado;
		this.fechaConfirmacion = fechaConfirmacion;
		this.usuarioConfirmacion = usuarioConfirmacion;
		this.fechaActualizacion = fechaActualizacion;
		this.usuarioActualizacion = usuarioActualizacion;
	}

	@Id

	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Id_Pedido_Producto", nullable = false)
	public PedidosProductos getPedidosProductos() {
		return this.pedidosProductos;
	}

	public void setPedidosProductos(PedidosProductos pedidosProductos) {
		this.pedidosProductos = pedidosProductos;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Id_Centro_Distribucion", nullable = false)
	public CentrosDistribucion getCentrosDistribucion() {
		return this.centrosDistribucion;
	}

	public void setCentrosDistribucion(CentrosDistribucion centrosDistribucion) {
		this.centrosDistribucion = centrosDistribucion;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Id_UoM", nullable = false)
	public UoM getUoM() {
		return this.uoM;
	}

	public void setUoM(UoM uoM) {
		this.uoM = uoM;
	}

	@Column(name = "Numero_Lote", nullable = false, length = 25)
	public String getNumeroLote() {
		return this.numeroLote;
	}

	public void setNumeroLote(String numeroLote) {
		this.numeroLote = numeroLote;
	}

	@Column(name = "Numero_BL", nullable = false, length = 25)
	public String getNumeroBl() {
		return this.numeroBl;
	}

	public void setNumeroBl(String numeroBl) {
		this.numeroBl = numeroBl;
	}

	@Column(name = "Numero_Fondo_Cuenta", nullable = false, length = 25)
	public String getNumeroFondoCuenta() {
		return this.numeroFondoCuenta;
	}

	public void setNumeroFondoCuenta(String numeroFondoCuenta) {
		this.numeroFondoCuenta = numeroFondoCuenta;
	}

	@Column(name = "Cantidad", nullable = false)
	public Integer getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(Integer cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "Sugerido", nullable = false)
	public Boolean getSugerido() {
		return this.sugerido;
	}

	public void setSugerido(Boolean sugerido) {
		this.sugerido = sugerido;
	}

	@Column(name = "Confirmado", nullable = false)
	public Boolean getConfirmado() {
		return this.confirmado;
	}

	public void setConfirmado(Boolean confirmado) {
		this.confirmado = confirmado;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Confirmacion", length = 19)
	public Date getFechaConfirmacion() {
		return this.fechaConfirmacion;
	}

	public void setFechaConfirmacion(Date fechaConfirmacion) {
		this.fechaConfirmacion = fechaConfirmacion;
	}

	@Column(name = "Usuario_Confirmacion", length = 50)
	public String getUsuarioConfirmacion() {
		return this.usuarioConfirmacion;
	}

	public void setUsuarioConfirmacion(String usuarioConfirmacion) {
		this.usuarioConfirmacion = usuarioConfirmacion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
	public Date getFechaActualizacion() {
		return this.fechaActualizacion;
	}

	public void setFechaActualizacion(Date fechaActualizacion) {
		this.fechaActualizacion = fechaActualizacion;
	}

	@Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
	public String getUsuarioActualizacion() {
		return this.usuarioActualizacion;
	}

	public void setUsuarioActualizacion(String usuarioActualizacion) {
		this.usuarioActualizacion = usuarioActualizacion;
	}

}
