package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * ProductosUoM generated by hbm2java
 */
@Entity
@Table(name = "Productos_UoM", schema = "wms", catalog = "Tactic")
public class ProductosUoM implements java.io.Serializable,EntityId {

    private Integer id;
    private Productos productos;
    private UoM uoM;
    private byte nivel;
    private Boolean unidadBase;
    private Boolean unidadReciboPredeterminada;
    private Boolean unidadDespachoPredeterminada;
    private Integer factorConversionUnidadBase;
    private BigDecimal dimensionLargo;
    private BigDecimal dimensionAncho;
    private BigDecimal dimensionAlto;
    private BigDecimal pesoBruto;
    private BigDecimal valorPorUoMDespachada;
    private Boolean activo;
    private Date fechaActualizacion;
    private String usuarioActualizacion;

    public ProductosUoM() {
    }

    public ProductosUoM(Integer id, Productos productos, UoM uoM, byte nivel, Boolean unidadBase,
            Boolean unidadReciboPredeterminada, Boolean unidadDespachoPredeterminada,
            Integer factorConversionUnidadBase, BigDecimal dimensionLargo, BigDecimal dimensionAncho,
            BigDecimal dimensionAlto, BigDecimal pesoBruto, BigDecimal valorPorUoMDespachada, Boolean activo,
            Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.productos = productos;
        this.uoM = uoM;
        this.nivel = nivel;
        this.unidadBase = unidadBase;
        this.unidadReciboPredeterminada = unidadReciboPredeterminada;
        this.unidadDespachoPredeterminada = unidadDespachoPredeterminada;
        this.factorConversionUnidadBase = factorConversionUnidadBase;
        this.dimensionLargo = dimensionLargo;
        this.dimensionAncho = dimensionAncho;
        this.dimensionAlto = dimensionAlto;
        this.pesoBruto = pesoBruto;
        this.valorPorUoMDespachada = valorPorUoMDespachada;
        this.activo = activo;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @Id
    @Column(name = "Id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_Producto", nullable = false)
    public Productos getProductos() {
        return this.productos;
    }

    public void setProductos(Productos productos) {
        this.productos = productos;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_UoM", nullable = false)
    public UoM getUoM() {
        return this.uoM;
    }

    public void setUoM(UoM uoM) {
        this.uoM = uoM;
    }

    @Column(name = "Nivel", nullable = false)
    public byte getNivel() {
        return this.nivel;
    }

    public void setNivel(byte nivel) {
        this.nivel = nivel;
    }

    @Column(name = "Unidad_Base", nullable = false)
    public Boolean getUnidadBase() {
        return this.unidadBase;
    }

    public void setUnidadBase(Boolean unidadBase) {
        this.unidadBase = unidadBase;
    }

    @Column(name = "Unidad_Recibo_Predeterminada", nullable = false)
    public Boolean getUnidadReciboPredeterminada() {
        return this.unidadReciboPredeterminada;
    }

    public void setUnidadReciboPredeterminada(Boolean unidadReciboPredeterminada) {
        this.unidadReciboPredeterminada = unidadReciboPredeterminada;
    }

    @Column(name = "Unidad_Despacho_Predeterminada", nullable = false)
    public Boolean getUnidadDespachoPredeterminada() {
        return this.unidadDespachoPredeterminada;
    }

    public void setUnidadDespachoPredeterminada(Boolean unidadDespachoPredeterminada) {
        this.unidadDespachoPredeterminada = unidadDespachoPredeterminada;
    }

    @Column(name = "Factor_Conversion_Unidad_Base", nullable = false)
    public Integer getFactorConversionUnidadBase() {
        return this.factorConversionUnidadBase;
    }

    public void setFactorConversionUnidadBase(Integer factorConversionUnidadBase) {
        this.factorConversionUnidadBase = factorConversionUnidadBase;
    }

    @Column(name = "Dimension_Largo", nullable = false, scale = 4)
    public BigDecimal getDimensionLargo() {
        return this.dimensionLargo;
    }

    public void setDimensionLargo(BigDecimal dimensionLargo) {
        this.dimensionLargo = dimensionLargo;
    }

    @Column(name = "Dimension_Ancho", nullable = false, scale = 4)
    public BigDecimal getDimensionAncho() {
        return this.dimensionAncho;
    }

    public void setDimensionAncho(BigDecimal dimensionAncho) {
        this.dimensionAncho = dimensionAncho;
    }

    @Column(name = "Dimension_Alto", nullable = false, scale = 4)
    public BigDecimal getDimensionAlto() {
        return this.dimensionAlto;
    }

    public void setDimensionAlto(BigDecimal dimensionAlto) {
        this.dimensionAlto = dimensionAlto;
    }

    @Column(name = "Peso_Bruto", nullable = false, precision = 23, scale = 8)
    public BigDecimal getPesoBruto() {
        return this.pesoBruto;
    }

    public void setPesoBruto(BigDecimal pesoBruto) {
        this.pesoBruto = pesoBruto;
    }

    @Column(name = "Valor_Por_UoM_Despachada", nullable = false, scale = 4)
    public BigDecimal getValorPorUoMDespachada() {
        return this.valorPorUoMDespachada;
    }

    public void setValorPorUoMDespachada(BigDecimal valorPorUoMDespachada) {
        this.valorPorUoMDespachada = valorPorUoMDespachada;
    }

    @Column(name = "Activo", nullable = false)
    public Boolean getActivo() {
        return this.activo;
    }

    public void setActivo(Boolean activo) {
        this.activo = activo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

}
