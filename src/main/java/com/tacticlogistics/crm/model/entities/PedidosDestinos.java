package com.tacticlogistics.crm.model.entities;
// Generated 28-nov-2015 7:36:03 by Hibernate Tools 4.3.1.Final

import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.LinkedList;
import java.util.List;
import java.util.Set;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * PedidosDestinos generated by hbm2java
 */
@Entity
@Table(name = "Pedidos_Destinos", schema = "crm", catalog = "Tactic")
public class PedidosDestinos implements java.io.Serializable, EntityId {

    private Integer id;
    private DestinatariosFinales destinatariosFinales;
    private Pedidos pedidos;
    private Direcciones direcciones;
    private PuntosEntrega puntosEntrega;
    private Short numeroLinea;
    private String nombreContacto;
    private String telefonosContacto;
    private String emailsContacto;
    private BigDecimal valorDeclarado;
    private Date fechaActualizacion;
    private String usuarioActualizacion;
    private PedidosDestinosDireccionesOriginales pedidosDestinosDireccionesOriginales;
    private Set<Despachos> despachoses = new HashSet<>(0);
    private PedidosDestinosVentanasEntrega pedidosDestinosVentanasEntrega;
    private List<PedidosProductos> pedidosProductoses = new LinkedList<>();

    public PedidosDestinos() {
    }

    public PedidosDestinos(Integer id, Pedidos pedidos, Short numeroLinea, String nombreContacto, String telefonosContacto, String emailsContacto,BigDecimal valorDeclarado,
            Date fechaActualizacion, String usuarioActualizacion) {
        this.id = id;
        this.pedidos = pedidos;
        this.numeroLinea = numeroLinea;
        this.nombreContacto = nombreContacto;
        this.telefonosContacto = telefonosContacto;
        this.emailsContacto = emailsContacto;
        this.valorDeclarado = valorDeclarado;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
    }

    public PedidosDestinos(Integer id, DestinatariosFinales destinatariosFinales, Pedidos pedidos,
            Direcciones direcciones, PuntosEntrega puntosEntrega, Short numeroLinea, String nombreContacto, String telefonosContacto, String emailsContacto,BigDecimal valorDeclarado,
            Date fechaActualizacion, String usuarioActualizacion,
            PedidosDestinosDireccionesOriginales pedidosDestinosDireccionesOriginales, Set<Despachos> despachoses,
            PedidosDestinosVentanasEntrega pedidosDestinosVentanasEntrega, List<PedidosProductos> pedidosProductoses) {
        this.id = id;
        this.destinatariosFinales = destinatariosFinales;
        this.pedidos = pedidos;
        this.direcciones = direcciones;
        this.puntosEntrega = puntosEntrega;
        this.numeroLinea = numeroLinea;
        this.nombreContacto = nombreContacto;
        this.telefonosContacto = telefonosContacto;
        this.emailsContacto = emailsContacto;
        this.valorDeclarado = valorDeclarado;
        this.fechaActualizacion = fechaActualizacion;
        this.usuarioActualizacion = usuarioActualizacion;
        this.pedidosDestinosDireccionesOriginales = pedidosDestinosDireccionesOriginales;
        this.despachoses = despachoses;
        this.pedidosDestinosVentanasEntrega = pedidosDestinosVentanasEntrega;
        this.pedidosProductoses = pedidosProductoses;
    }

    @Id
    @GeneratedValue(strategy = javax.persistence.GenerationType.IDENTITY)
    @Column(name = "Id", unique = true, nullable = false)
    @Override
    public Integer getId() {
        return this.id;
    }

    @Override
    public void setId(Integer id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Destinatario_Final")
    public DestinatariosFinales getDestinatariosFinales() {
        return this.destinatariosFinales;
    }

    public void setDestinatariosFinales(DestinatariosFinales destinatariosFinales) {
        this.destinatariosFinales = destinatariosFinales;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Pedido", nullable = false)
    public Pedidos getPedidos() {
        return this.pedidos;
    }

    public void setPedidos(Pedidos pedidos) {
        this.pedidos = pedidos;
    }

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "Id_Direccion")
    public Direcciones getDirecciones() {
        return this.direcciones;
    }

    public void setDirecciones(Direcciones direcciones) {
        this.direcciones = direcciones;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "Id_Punto_Entrega")
    public PuntosEntrega getPuntosEntrega() {
        return this.puntosEntrega;
    }

    public void setPuntosEntrega(PuntosEntrega puntosEntrega) {
        this.puntosEntrega = puntosEntrega;
    }

    @Column(name = "Numero_Linea", nullable = false)
    public Short getNumeroLinea() {
        return this.numeroLinea;
    }

    public void setNumeroLinea(Short numeroLinea) {
        this.numeroLinea = numeroLinea;
    }

    @Column(name = "Nombre_Contacto", nullable = false, length = 100)
    public String getNombreContacto() {
        return nombreContacto;
    }

    public void setNombreContacto(String nombreContacto) {
        this.nombreContacto = nombreContacto;
    }

    @Column(name = "Telefonos_Contacto", nullable = false, length = 50)
    public String getTelefonosContacto() {
        return telefonosContacto;
    }

    public void setTelefonosContacto(String telefonosContacto) {
        this.telefonosContacto = telefonosContacto;
    }

    @Column(name = "Emails_Cotacto", nullable = false, length = 50)
    public String getEmailsContacto() {
        return emailsContacto;
    }

    public void setEmailsContacto(String emailsContacto) {
        this.emailsContacto = emailsContacto;
    }
    
    @Column(name = "Valor_Declarado", nullable = false, scale = 4)
    public BigDecimal getValorDeclarado() {
        return this.valorDeclarado;
    }

    public void setValorDeclarado(BigDecimal valorDeclarado) {
        this.valorDeclarado = valorDeclarado;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "Fecha_Actualizacion", nullable = false, length = 19)
    public Date getFechaActualizacion() {
        return this.fechaActualizacion;
    }

    public void setFechaActualizacion(Date fechaActualizacion) {
        this.fechaActualizacion = fechaActualizacion;
    }

    @Column(name = "Usuario_Actualizacion", nullable = false, length = 50)
    public String getUsuarioActualizacion() {
        return this.usuarioActualizacion;
    }

    public void setUsuarioActualizacion(String usuarioActualizacion) {
        this.usuarioActualizacion = usuarioActualizacion;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "pedidosDestinos")
    public PedidosDestinosDireccionesOriginales getPedidosDestinosDireccionesOriginales() {
        return this.pedidosDestinosDireccionesOriginales;
    }

    public void setPedidosDestinosDireccionesOriginales(
            PedidosDestinosDireccionesOriginales pedidosDestinosDireccionesOriginales) {
        this.pedidosDestinosDireccionesOriginales = pedidosDestinosDireccionesOriginales;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "pedidosDestinos")
    public Set<Despachos> getDespachoses() {
        return this.despachoses;
    }

    public void setDespachoses(Set<Despachos> despachoses) {
        this.despachoses = despachoses;
    }

    @OneToOne(fetch = FetchType.LAZY, mappedBy = "pedidosDestinos")
    public PedidosDestinosVentanasEntrega getPedidosDestinosVentanasEntrega() {
        return this.pedidosDestinosVentanasEntrega;
    }

    public void setPedidosDestinosVentanasEntrega(PedidosDestinosVentanasEntrega pedidosDestinosVentanasEntrega) {
        this.pedidosDestinosVentanasEntrega = pedidosDestinosVentanasEntrega;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "pedidosDestinos", cascade = CascadeType.ALL)
    public List<PedidosProductos> getPedidosProductoses() {
        return this.pedidosProductoses;
    }

    public void setPedidosProductoses(List<PedidosProductos> pedidosProductoses) {
        this.pedidosProductoses = pedidosProductoses;
    }

}
